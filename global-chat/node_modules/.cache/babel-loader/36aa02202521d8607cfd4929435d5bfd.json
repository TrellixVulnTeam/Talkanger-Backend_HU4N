{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sebas\\\\Desktop\\\\Chat App\\\\global-chat\\\\src\\\\components\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport ChatHeader from './ChatHeader.js';\nimport ChatFooter from './ChatFooter.js';\nimport ChatBody from './ChatBody'; //Chat Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat({\n  socket,\n  username,\n  room\n}) {\n  _s();\n\n  const [currentMessage, setCurrentMessage] = useState(\"\");\n  const [messageList, setMessageList] = useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\") {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await socket.emit(\"send_message\", messageData);\n      setMessageList(list => [...list, messageData]);\n      setCurrentMessage(\"\");\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      setMessageList(list => [...list, data]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"chat-window px-2 bg-dark text-light\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n      socket: socket,\n      room: room,\n      username: username,\n      messageList: messageList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n      socket: socket,\n      room: room,\n      username: username,\n      currentMessage: currentMessage,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/sebas/Desktop/Chat App/global-chat/src/components/Chat.js"],"names":["React","useEffect","useState","Container","ChatHeader","ChatFooter","ChatBody","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAGA;;;;AACA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAd,EAA0C;AAAA;;AACxC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;;AAGA,QAAMa,WAAW,GAAG,YAAY;AAC9B,QAAIJ,cAAc,KAAK,EAAvB,EAA2B;AACzB,YAAMK,WAAW,GAAG;AAClBN,QAAAA,IAAI,EAAEA,IADY;AAElBO,QAAAA,MAAM,EAAER,QAFU;AAGlBS,QAAAA,OAAO,EAAEP,cAHS;AAIlBQ,QAAAA,IAAI,EACF,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KACA,GADA,GAEA,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;AAPgB,OAApB;AAUA,YAAMf,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4BR,WAA5B,CAAN;AACAF,MAAAA,cAAc,CAAEW,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUT,WAAV,CAAX,CAAd;AACAJ,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD;AACF,GAhBD;;AAkBAX,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,MAAM,CAACkB,EAAP,CAAU,iBAAV,EAA8BC,IAAD,IAAU;AACrCb,MAAAA,cAAc,CAAEW,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUE,IAAV,CAAX,CAAd;AACD,KAFD;AAGD,GAJQ,EAIN,CAACnB,MAAD,CAJM,CAAT;AAOA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,qCAA3B;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEF,MAAlB;AAA0B,MAAA,IAAI,EAAEE,IAAhC;AAAsC,MAAA,QAAQ,EAAED,QAAhD;AAA0D,MAAA,WAAW,EAAEI;AAAvE;AAAA;AAAA;AAAA;AAAA,YAHF,eAKE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEL,MAApB;AAA4B,MAAA,IAAI,EAAEE,IAAlC;AAAwC,MAAA,QAAQ,EAAED,QAAlD;AAA4D,MAAA,cAAc,EAAEE,cAA5E;AAA4F,MAAA,WAAW,EAAEI;AAAzG;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAxCQR,I;;KAAAA,I;AA0CT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport ChatHeader from './ChatHeader.js'\r\nimport ChatFooter from './ChatFooter.js'\r\nimport ChatBody from './ChatBody'\r\n\r\n\r\n//Chat Component\r\nfunction Chat({ socket, username, room }) {\r\n  const [currentMessage, setCurrentMessage] = useState(\"\");\r\n  const [messageList, setMessageList] = useState([]);\r\n\r\n\r\n  const sendMessage = async () => {\r\n    if (currentMessage !== \"\") {\r\n      const messageData = {\r\n        room: room,\r\n        author: username,\r\n        message: currentMessage,\r\n        time:\r\n          new Date(Date.now()).getHours() +\r\n          \":\" +\r\n          new Date(Date.now()).getMinutes(),\r\n      };\r\n\r\n      await socket.emit(\"send_message\", messageData);\r\n      setMessageList((list) => [...list, messageData]);\r\n      setCurrentMessage(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receive_message\", (data) => {\r\n      setMessageList((list) => [...list, data]);\r\n    });\r\n  }, [socket]);\r\n\r\n\r\n  return (\r\n    <Container fluid className=\"chat-window px-2 bg-dark text-light\">\r\n      <ChatHeader room={room} />\r\n\r\n      <ChatBody socket={socket} room={room} username={username} messageList={messageList}/>\r\n\r\n      <ChatFooter socket={socket} room={room} username={username} currentMessage={currentMessage} sendMessage={sendMessage} />\r\n\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}